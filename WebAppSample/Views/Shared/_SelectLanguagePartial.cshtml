@inject ILocalizationService Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures!
        .Select(c => new SelectListItem { Value = c.Name, Text = Localizer[c.EnglishName] })
        .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";

    string getCultureFlag()
    {
        return requestCulture?.RequestCulture.UICulture.Name switch
        {
            "en" => "us",
            _ => requestCulture?.RequestCulture.UICulture.Name ?? string.Empty
        };
    }
}

<div title="@Localizer["Request culture provider:"] @requestCulture?.Provider?.GetType().Name">
    <form id="selectLanguage" asp-controller="Home"
          asp-action="SetLanguage" asp-route-returnUrl="@returnUrl"
          method="post" class="form-horizontal" role="form">
        <label asp-for="@requestCulture!.RequestCulture.UICulture.Name">@Localizer["Language:"]</label>
        <span class="fi fi-@getCultureFlag()"></span>
        <select name="culture" onchange="this.form.submit();"
                asp-for="@requestCulture!.RequestCulture.UICulture.Name" asp-items="cultureItems">
        </select>
    </form>
</div>